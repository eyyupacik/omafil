workflows:
  ios-build:
    name: iOS Build Workflow
    instance_type: mac_mini_m1
    environment:
      xcode: latest
      vars:
        DOTNET_VERSION: 8.0.100 # Kullanılacak .NET SDK versiyonu
      ios_signing:
        distribution_type: app_store # app_store, ad_hoc, development, enterprise
        bundle_identifier: com.eas.omacalculator # Uygulamanın Bundle ID'si
    scripts:
      - name: Check if code signing certificates are installed
        script: |
            security find-identity -v -p codesigning
            if [ $? -ne 0 ]; then
              echo "No valid code signing certificates found!"
              exit 1
            fi
      - name: Install .NET SDK
        script: |
          wget https://dot.net/v1/dotnet-install.sh
          chmod +x dotnet-install.sh
          ./dotnet-install.sh -c 8.0 --install-dir $HOME/.dotnet
          echo 'export PATH=$HOME/.dotnet:$PATH' >> $HOME/.bash_profile
          source $HOME/.bash_profile
      - name: Install MAUI Workloads
        script: |
          export PATH=$HOME/.dotnet:$HOME/.dotnet/tools:$PATH
          dotnet workload install maui-ios --ignore-failed-sources
          dotnet workload restore
          dotnet --info
      - name: Check Installed Workloads
        script: |
          export PATH=$HOME/.dotnet:$HOME/.dotnet/tools:$PATH
          dotnet workload list
      - name: Check .NET SDK
        script: |
          export PATH=$HOME/.dotnet:$PATH
          dotnet --info
      - name: Restore Dependencies
        script: |
          export PATH=$HOME/.dotnet:$PATH
          dotnet restore
      - name: Build the app
      script: | 
        LATEST_BUILD_NUMBER=$(app-store-connect get-latest-testflight-build-number "$APP_STORE_APPLE_ID")
        if [ -z $LATEST_BUILD_NUMBER ]; then
          UPDATED_BUILD_NUMBER=$BUILD_NUMBER
        else
          UPDATED_BUILD_NUMBER=$(($LATEST_BUILD_NUMBER + 1))
        fi
          
        CERT_NAME=$(keychain list-certificates | jq -r '.[] | .common_name')
        PROFILE_NAME=$(find ~/Library/MobileDevice/Provisioning\ Profiles -name "*.mobileprovision" -execdir sh -c '/usr/libexec/PlistBuddy -c "print :Name" /dev/stdin <<< $(security cms -D -i {})' \;)
          
        cd src
        $DOTNET publish -f net6.0-ios \
          -c Release \
          -p:BuildIpa=True \
          -p:ApplicationDisplayVersion="1.0.0" \
          -p:ApplicationVersion=$UPDATED_BUILD_NUMBER \
          -p:RuntimeIdentifier=ios-arm64 \
          -p:CodesignKey="$CERT_NAME" \
          -p:CodesignProvision="$PROFILE_NAME" \
          -o ../artifacts
    artifacts:
      - $(find . -name "*.ipa")
