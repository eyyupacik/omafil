workflows:
  ios-build:
    name: iOS Build Workflow
    instance_type: mac_mini_m1
    environment:
      xcode: latest
      vars:
        DOTNET_VERSION: 8.0.100
        APP_STORE_CONNECT_ISSUER_ID: $APP_STORE_CONNECT_ISSUER_ID
        APP_STORE_CONNECT_KEY_ID: $APP_STORE_CONNECT_KEY_ID
        APP_STORE_CONNECT_PRIVATE_KEY: $APP_STORE_CONNECT_PRIVATE_KEY
      ios_signing:
        distribution_type: app_store
        bundle_identifier: com.eas.omacalculator
    scripts:
      - name: Check if code signing certificates are installed
        script: |
          security find-identity -v -p codesigning
      - name: Install .NET SDK
        script: |
          wget https://dot.net/v1/dotnet-install.sh
          chmod +x dotnet-install.sh
          ./dotnet-install.sh -c 8.0 --install-dir $HOME/.dotnet
          echo 'export PATH=$HOME/.dotnet:$PATH' >> $HOME/.bash_profile
          source $HOME/.bash_profile
      - name: Install MAUI Workloads
        script: |
          export PATH=$HOME/.dotnet:$HOME/.dotnet/tools:$PATH
          dotnet workload install maui-ios --ignore-failed-sources
          dotnet workload restore
      - name: Debug Dotnet Path
        script: |
          echo "DOTNET PATH: $DOTNET"
          which dotnet
      - name: Restore Dependencies
        script: |
          export PATH=$HOME/.dotnet:$PATH
          dotnet restore
      - name: Build the app
        script: | 
          LATEST_BUILD_NUMBER=$(app-store-connect get-latest-testflight-build-number "$APP_STORE_APPLE_ID")
          if [ -z $LATEST_BUILD_NUMBER ]; then
            UPDATED_BUILD_NUMBER=$BUILD_NUMBER
          else
            UPDATED_BUILD_NUMBER=$(($LATEST_BUILD_NUMBER + 1))
          fi

          CERT_NAME=$(security find-identity -v -p codesigning | awk -F'"' '{print $2}' | head -n 1)
          PROFILE_PATH=$(find ~/Library/MobileDevice/Provisioning\ Profiles -name "*.mobileprovision" | head -n 1)

          if [ -z "$CERT_NAME" ]; then
            echo "No valid certificate found!"
            exit 1
          fi
          if [ -z "$PROFILE_PATH" ]; then
            echo "No valid provisioning profile found!"
            exit 1
          fi

          dotnet publish -f net6.0-ios \
            -c Release \
            -p:BuildIpa=True \
            -p:ApplicationDisplayVersion="1.0.0" \
            -p:ApplicationVersion=$UPDATED_BUILD_NUMBER \
            -p:RuntimeIdentifier=ios-arm64 \
            -p:CodesignKey="$CERT_NAME" \
            -p:CodesignProvision="$PROFILE_PATH" \
            -o ../artifacts
    artifacts:
      - $(find . -name "*.ipa")
